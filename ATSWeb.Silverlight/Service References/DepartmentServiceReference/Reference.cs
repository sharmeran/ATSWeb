//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace ATSWeb.Silverlight.DepartmentServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DepartmentServiceReference.DepartmentWebServiceSoap")]
    public interface DepartmentWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FindByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseClass))]
        System.IAsyncResult BeginFindByID(int entityID, System.AsyncCallback callback, object asyncState);
        
        ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment EndFindByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FindAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseClass))]
        System.IAsyncResult BeginFindAll(System.AsyncCallback callback, object asyncState);
        
        ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment EndFindAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FindStartWith", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseClass))]
        System.IAsyncResult BeginFindStartWith(string deptCode, System.AsyncCallback callback, object asyncState);
        
        ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment EndFindStartWith(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityResultOfDepartment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Department returnedEntityField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Department ReturnedEntity {
            get {
                return this.returnedEntityField;
            }
            set {
                this.returnedEntityField = value;
                this.RaisePropertyChanged("ReturnedEntity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Department : BaseClass {
        
        private decimal shortCodeField;
        
        private decimal codeField;
        
        private string shortNameField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal ShortCode {
            get {
                return this.shortCodeField;
            }
            set {
                this.shortCodeField = value;
                this.RaisePropertyChanged("ShortCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
                this.RaisePropertyChanged("ShortName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Department))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseClass : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityListResultOfDepartment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Department[] returnedEntitiesField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Department[] ReturnedEntities {
            get {
                return this.returnedEntitiesField;
            }
            set {
                this.returnedEntitiesField = value;
                this.RaisePropertyChanged("ReturnedEntities");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DepartmentWebServiceSoapChannel : ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindStartWithCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindStartWithCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentWebServiceSoapClient : System.ServiceModel.ClientBase<ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap>, ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap {
        
        private BeginOperationDelegate onBeginFindByIDDelegate;
        
        private EndOperationDelegate onEndFindByIDDelegate;
        
        private System.Threading.SendOrPostCallback onFindByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindAllDelegate;
        
        private EndOperationDelegate onEndFindAllDelegate;
        
        private System.Threading.SendOrPostCallback onFindAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindStartWithDelegate;
        
        private EndOperationDelegate onEndFindStartWithDelegate;
        
        private System.Threading.SendOrPostCallback onFindStartWithCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DepartmentWebServiceSoapClient() {
        }
        
        public DepartmentWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartmentWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<FindByIDCompletedEventArgs> FindByIDCompleted;
        
        public event System.EventHandler<FindAllCompletedEventArgs> FindAllCompleted;
        
        public event System.EventHandler<FindStartWithCompletedEventArgs> FindStartWithCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap.BeginFindByID(int entityID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindByID(entityID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap.EndFindByID(System.IAsyncResult result) {
            return base.Channel.EndFindByID(result);
        }
        
        private System.IAsyncResult OnBeginFindByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int entityID = ((int)(inValues[0]));
            return ((ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap)(this)).BeginFindByID(entityID, callback, asyncState);
        }
        
        private object[] OnEndFindByID(System.IAsyncResult result) {
            ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment retVal = ((ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap)(this)).EndFindByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindByIDCompleted(object state) {
            if ((this.FindByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindByIDCompleted(this, new FindByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindByIDAsync(int entityID) {
            this.FindByIDAsync(entityID, null);
        }
        
        public void FindByIDAsync(int entityID, object userState) {
            if ((this.onBeginFindByIDDelegate == null)) {
                this.onBeginFindByIDDelegate = new BeginOperationDelegate(this.OnBeginFindByID);
            }
            if ((this.onEndFindByIDDelegate == null)) {
                this.onEndFindByIDDelegate = new EndOperationDelegate(this.OnEndFindByID);
            }
            if ((this.onFindByIDCompletedDelegate == null)) {
                this.onFindByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindByIDCompleted);
            }
            base.InvokeAsync(this.onBeginFindByIDDelegate, new object[] {
                        entityID}, this.onEndFindByIDDelegate, this.onFindByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap.BeginFindAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap.EndFindAll(System.IAsyncResult result) {
            return base.Channel.EndFindAll(result);
        }
        
        private System.IAsyncResult OnBeginFindAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap)(this)).BeginFindAll(callback, asyncState);
        }
        
        private object[] OnEndFindAll(System.IAsyncResult result) {
            ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment retVal = ((ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap)(this)).EndFindAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindAllCompleted(object state) {
            if ((this.FindAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindAllCompleted(this, new FindAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindAllAsync() {
            this.FindAllAsync(null);
        }
        
        public void FindAllAsync(object userState) {
            if ((this.onBeginFindAllDelegate == null)) {
                this.onBeginFindAllDelegate = new BeginOperationDelegate(this.OnBeginFindAll);
            }
            if ((this.onEndFindAllDelegate == null)) {
                this.onEndFindAllDelegate = new EndOperationDelegate(this.OnEndFindAll);
            }
            if ((this.onFindAllCompletedDelegate == null)) {
                this.onFindAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindAllCompleted);
            }
            base.InvokeAsync(this.onBeginFindAllDelegate, null, this.onEndFindAllDelegate, this.onFindAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap.BeginFindStartWith(string deptCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindStartWith(deptCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap.EndFindStartWith(System.IAsyncResult result) {
            return base.Channel.EndFindStartWith(result);
        }
        
        private System.IAsyncResult OnBeginFindStartWith(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string deptCode = ((string)(inValues[0]));
            return ((ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap)(this)).BeginFindStartWith(deptCode, callback, asyncState);
        }
        
        private object[] OnEndFindStartWith(System.IAsyncResult result) {
            ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment retVal = ((ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap)(this)).EndFindStartWith(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindStartWithCompleted(object state) {
            if ((this.FindStartWithCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindStartWithCompleted(this, new FindStartWithCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindStartWithAsync(string deptCode) {
            this.FindStartWithAsync(deptCode, null);
        }
        
        public void FindStartWithAsync(string deptCode, object userState) {
            if ((this.onBeginFindStartWithDelegate == null)) {
                this.onBeginFindStartWithDelegate = new BeginOperationDelegate(this.OnBeginFindStartWith);
            }
            if ((this.onEndFindStartWithDelegate == null)) {
                this.onEndFindStartWithDelegate = new EndOperationDelegate(this.OnEndFindStartWith);
            }
            if ((this.onFindStartWithCompletedDelegate == null)) {
                this.onFindStartWithCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindStartWithCompleted);
            }
            base.InvokeAsync(this.onBeginFindStartWithDelegate, new object[] {
                        deptCode}, this.onEndFindStartWithDelegate, this.onFindStartWithCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap CreateChannel() {
            return new DepartmentWebServiceSoapClientChannel(this);
        }
        
        private class DepartmentWebServiceSoapClientChannel : ChannelBase<ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap>, ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap {
            
            public DepartmentWebServiceSoapClientChannel(System.ServiceModel.ClientBase<ATSWeb.Silverlight.DepartmentServiceReference.DepartmentWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginFindByID(int entityID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entityID;
                System.IAsyncResult _result = base.BeginInvoke("FindByID", _args, callback, asyncState);
                return _result;
            }
            
            public ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment EndFindByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment _result = ((ATSWeb.Silverlight.DepartmentServiceReference.EntityResultOfDepartment)(base.EndInvoke("FindByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindAll(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("FindAll", _args, callback, asyncState);
                return _result;
            }
            
            public ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment EndFindAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment _result = ((ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment)(base.EndInvoke("FindAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindStartWith(string deptCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = deptCode;
                System.IAsyncResult _result = base.BeginInvoke("FindStartWith", _args, callback, asyncState);
                return _result;
            }
            
            public ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment EndFindStartWith(System.IAsyncResult result) {
                object[] _args = new object[0];
                ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment _result = ((ATSWeb.Silverlight.DepartmentServiceReference.EntityListResultOfDepartment)(base.EndInvoke("FindStartWith", _args, result)));
                return _result;
            }
        }
    }
}
